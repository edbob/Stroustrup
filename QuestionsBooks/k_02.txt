Задание 2: 

1 . Напишите программу, формирующую простую форму для письма на
основе входной информации. Для начала наберите программу из раздела
    3.1 , предложив пользователю ввести свое имя и предусмотрев
    вывод строки "Привет, first_name", где first_name - это имя, введенное
    пользователем. Затем модифицируйте программу следующим
    образом: измените приглашение на строку "Введите имя адресата" и
    измените вывод на строку "Дорогой first_name , " (не забудьте о запятой
    ! ) .

2. Введите одну и л и две вступительные фразы. например "Как дела?
У меня все хорошо. Я скучаю по тебе" . Убедитесь, что первая строка
отделена от других. Добавьте еще несколько строк по своему усмотрению
- это же ваше письмо.

3. П редложите пользователю ввести имя другого приятеля и сохраните
его в переменной friend_ name. Добавьте в ваше письмо следующую
строку: "Давно ли ты встречал friend _ name?" .

4. Объявите переменную типа char с именем friend_sex и инициализируйте
ее нулем . Предложите пользователю ввести значение m, если
ваш друг - мужчина, и f - если женщина. Присвойте переменной
friend_ sex введенное значение. Затем с помощью двух инструкций if
запишите следующее.
Если друг - мужчина, то напишите строку "Если ты увидишь friend_
name, пожалуйста, попроси его позвонить мне" .
Если друг - женщина, то напишите строку "Если ты увидишь friend_
name, пожалуйста, попроси ее позвонить мне".

5 . Предложите пользователю ввести возраст адресата и присвойте его
переменной age, имеющей тип int. Ваша программа должна вывести
на экран строку "Я слышал , ты только что отметил день рождения и
тебе исполнилось age лет". Если значение переменной age меньше или
равно О или больше или равно 1 1 0, выполните вызов simple_error ( " 'l'Ы
шутишь ! " ) , используя функцию simple _ error ( ) и з заголовочного файла
std lib faci l ities . h.

6. Добавьте в ваше письмо следующее.
Если вашему другу меньше 1 2 лет, напишите "На следующий год тебе
исполнится age+ 1 лет".
Если вашему другу 1 7 лет, напишите "В следующем году ты сможешь
голосовать".
Если вашему другу больше 70 лет, напишите "Я надеюсь, что ты не
скучаешь на пенсии".
Убедитесь, что ваша программа правильно обрабатывает каждое из
этих значений.

7. Добавьте строку "Искренне твой", затем введите две пустые строки для
подписи и укажите свое имя.

Контрольные вопросы

1 . Что подразумевается под приглашением?

2. Какой оператор используется для чтения в переменную?

3. Если вы хотите, чтобы пользователь ввел целое значение в переменную

с именем numЬer, какие две строки следует добавить в программу,
чтобы предложить пользователю ввести значение в вашу программу и
считать введенное им значение?

4. Как называется символ \n и для чего он предназначен?

5. Что прекращает ввод значения в строку?

6. Что прекращает ввод значения в целочисленную переменную?

7. Как записать одной строкой следующий код?
cout « "Привет , 11 .
'
cout « first_name ;
cout « " ! \n " ;

8. Что такое объект?

9 . Что такое литерал?

10. Какие виды литералов существуют?

11 . Что такое переменная?

12 . Каковы типичные размеры переменных типов char, int и douЫe?

13 . В каких единицах измеряется объем памяти, занимаемой небольши-
ми переменными, например объектами типов int и s tring?

14. В чем заключается разница между операторами = и =?

15. Что такое определение?

16. Что такое инициализация и чем она отличается от присваивания?

17 . Что такое конкатенация строк и как она выполняется в языке С++?

18 . Какие из приведенных далее имен являются допустимыми в языке
С++? Если имя является недопустимым, укажите, по какой причине.
Тhiв_l ittleyig
lateвt thing
МiniМineмine
Тhiв 1 iв fine
the_$ 12_шethod
nuшЬer
2_For_l_вpecial
thiв iв ok
correct?

1 9. Приведите пять примеров корректных имен. которые вы не стали бы
использовать, чтобы не создавать недоразумений.

20. Сформулируйте разумные правила для выбора имен.

21 . Что такое безопасность типов и почему она так важна?

22. Почему преобразование типа douЫe в тип int может привести к
неприятностям?

23. Сформулируйте правило, помогающее решить, безопасно ли то или
иное преобразование типов.